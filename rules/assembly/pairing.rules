rule pair_reads:
    """Pairs reads with pear."""
    input:
        r1 = str(QC_FP/'decontam'/'{sample}_R1.fastq'),
        r2 = str(QC_FP/'decontam'/'{sample}_R2.fastq')
    output:
        aq = str(ASSEMBLY_FP/'paired'/'{sample}.assembled.fastq'),
        dq = str(ASSEMBLY_FP/'paired'/'{sample}.discarded.fastq'),
        uf = str(ASSEMBLY_FP/'paired'/'{sample}.unassembled.forward.fastq'),
        ur = str(ASSEMBLY_FP/'paired'/'{sample}.unassembled.reverse.fastq'),
        fa = str(ASSEMBLY_FP/'paired'/'{sample}.fasta')
    params:
        out_fp = str(ASSEMBLY_FP/'paired'/'{sample}')
    log:
        str(ASSEMBLY_FP/'log'/'paired'/'{sample}.stitch.log')
    threads:
        Cfg['assembly']['threads']
    shell:
        """
        pear -f {input.r1} -r {input.r2} -o {params.out_fp} -j {threads} >& {log} && \
        fq2fa {output[aq]} {output[fa]}
        """

rule _pair_all:
    input:
        expand(str(ASSEMBLY_FP/'paired'/'{sample}.assembled.fastq'),
               sample=Samples.keys())
