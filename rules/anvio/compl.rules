# -*- mode: Snakemake -*-
# Anvio-Binning-without-mapping-for-completeness
# http://merenlab.org/2016/06/06/working-with-contigs-only/
# Chunyu Zhao 
# 10/25/2017

#- todo: anvi-compute-completeness

rule simply_names_idbaud:
    input:
        str(ASSEMBLY_FP/'{sample}_assembly'/'final-contigs.fa')
    output:
        str(ANVIO_FP/'{sample}_assembly_idbaud'/'contigs'/'contigs.fa')
    params:
        str(ANVIO_FP/'{sample}_assembly_idbaud'/'contigs'/'anvi-simplify-names.txt')
    shell:
        """
        anvi-script-reformat-fasta {input} -o {output} -l 2000 --simplify-name --report-file {params} 
        """

rule simply_names:
    input:
        #str(ASSEMBLY_FP/'{sample}_assembly'/'final-contigs.fa')
        str(ASSEMBLY_FP/'megahit'/'{sample}_asm'/'final.contigs.fa')
    output:
        str(ANVIO_FP/'{sample}_assembly'/'contigs'/'contigs.fa')
    params:
        str(ANVIO_FP/'{sample}_assembly'/'contigs'/'anvi-simplify-names.txt')
    shell:
        """
        anvi-script-reformat-fasta {input} -o {output} -l 2000 --simplify-name --report-file {params}
        """

rule gen_contigs_db:
    input:
        str(ANVIO_FP/'{sample}_assembly'/'contigs'/'contigs.fa')
    output:
        str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db')
    params:
        sample="{sample}"
    shell:
        """
        anvi-gen-contigs-database -f {input} -o {output} -n {params.sample} -L 10000 #--skip-mindful-splitting ?
        """
rule _all_dbs:
    input:
        expand(str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db'), sample=Samples.keys())

rule run_hmm:
    input:
        str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db')
    output:
        sentinel = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'.savehmm')
    threads:
        Cfg['anvio']['threads']
    shell:
        """
        anvi-run-hmms -c {input} --num-threads {threads} && \
        touch {output.sentinel}
        """

rule _all_hmms:
    input:
        expand(str(ANVIO_FP/'{sample}_assembly'/'dbs'/'.savehmm'), sample=Samples.keys())


rule gen_stats_for_single_copy_genes:
    input:
        contigdb = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db'),
        sentinel = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'.savehmm')
    output:
        hits = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db.hits'),
        genes = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db.genes')
    shell:
        """
        anvi-script-gen_stats_for_single_copy_genes.py {input.contigdb}
        """

rule get_stats_pdf:
    input:
        hits = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db.hits'),
        genes = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db.genes')
    output:
        sentinel = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'.savepdf')
    shell:
        """
        anvi-script-gen_stats_for_single_copy_genes.R {input.hits} {input.genes} && touch {output.sentinel}
        """

rule _all_pdf:
    input:
        expand(str(ANVIO_FP/'{sample}_assembly'/'dbs'/'.savepdf'),sample=Samples.keys())


rule blank_profile:
    input:
        contigdb = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs.db'),
        sentinel = str(ANVIO_FP/'{sample}_assembly'/'dbs'/'.savepdf')
    output:
        str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs'/'PROFILE.db')
    shell:
        """
        anvi-profile -c {input.contigdb} -o contigs -S contigs --blank-profile -W
        """

rule _all_blank:
    input:
        expand(str(ANVIO_FP/'{sample}_assembly'/'dbs'/'contigs'/'PROFILE.db'), sample=Samples.keys())


