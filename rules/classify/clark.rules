# -*- mode: Snakemake -*-
#
# Rules for running CLARK

CLARK_DB = Cfg['classify']['clark_db_fp']
CLARK = Cfg['classify']['clark_version']

rule testtest:
    input:
        expand(str(CLASSIFY_FP/CLARK/'raw'/'{sample}-{level}.csv'),
               sample="Coxsackiec_S44",
               level="genus")

rule CLARK_set_targets:
    output:
        temp(str(CLARK_DB/'targets.txt'))
#        temp(str(CLARK_DB/'{level}.tmp'))
    shell:
        """
        cd $CONDA_ENV_PATH/opt/clark &&
        ./set_targets.sh {CLARK_DB} {Cfg[classify][clark_targets]} --{Cfg[classify][clark_level]}
        """

rule CLARK_classify:
    input:
        r1=str(QC_FP/'paired'/'{sample}_R1.fastq'),
        r2=str(QC_FP/'paired'/'{sample}_R2.fastq'),
        targets=str(CLARK_DB/'targets.txt')
#        level=str(CLARK_DB/'{level}.tmp')
    output:
        str(CLASSIFY_FP/CLARK/'raw'/'{sample}-{level}.csv')
    params:
        out=str(CLASSIFY_FP/CLARK/'raw'/'{sample}-{level}')
    shell:
        """
        {Cfg[classify][clark_version]} \
        {Cfg[classify][clark_opts]} \
        -T {input.targets} \
        -D {CLARK_DB} \
        -P {input.r1} {input.r2} \
        -n {Cfg[all][subcores]} \
        -R {params.out} 
        """

rule CLARK_est_abundance:
    input: str(CLASSIFY_FP/CLARK/'raw'/'{sample}-{level}.csv')
    output: str(CLASSIFY_FP/CLARK/'{sample}-{level}-taxa.csv')
    shell:
        """
        getAbundance \
        -D {CLARK_DB} \
        -F {input} > {output}
        """

rule CLARK_krona:
    input:
        str(CLASSIFY_FP/CLARK/'raw'/'{sample}-{level}.csv'),
        str(Cfg['classify']['taxa_db_fp']/'taxonomy.tab')
    output:
        str(CLASSIFY_FP/CLARK/'krona'/'{sample}-{level}.krn')
    shell:
        """
        getAbundance \
        --krona \
        -F {input} | tr "," "\\t" > {output}
        """

rule _CLARK_all:
    input:
        expand(str(CLASSIFY_FP/CLARK/'krona'/'{sample}-{level}-krona.html'),
               sample=Samples.keys(),
               level=Cfg['classify']['clark_level'])

    
